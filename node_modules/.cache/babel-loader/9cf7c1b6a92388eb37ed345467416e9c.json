{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var TodoHeader=function TodoHeader(){// TODO improve this, this is just to test the design\nvar date=new Date();var day=date.getDate();var weekDay=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'][date.getDay()];var month=['January','February','March','April','May','June','July','August','September','October','November','December'][date.getMonth()];var enOrdinalRules=new Intl.PluralRules('en',{type:'ordinal'});var enOrdinalRulesMap={one:'st',two:'nd',few:'rd',other:'th'};var enOrdinalSuffix=enOrdinalRulesMap[enOrdinalRules.select(day)];var getGreeting=function getGreeting(hour){if(hour>=6&&hour<10){return'Good Morning';}else if(hour>=10&&hour<19){return'Good Afternoon';}else if(hour>=19||hour<=6){return'Good Evening';}};var getHeaderImageClass=function getHeaderImageClass(hour){if(hour>=6&&hour<10){return'evening-background';}else if(hour>=10&&hour<19){return'day-background';}else if(hour>=19||hour<=6){return'night-background';}};return/*#__PURE__*/_jsxs(\"header\",{className:\"\".concat(getHeaderImageClass(date.getHours()),\" all-center\"),children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-test\",style:{fontSize:'20px'},children:getGreeting(date.getHours())}),/*#__PURE__*/_jsx(\"h1\",{className:\"text-test\",children:\"\".concat(weekDay,\", \").concat(day).concat(enOrdinalSuffix)}),/*#__PURE__*/_jsx(\"p\",{className:\"text-test\",style:{fontSize:'30px'},children:month})]});};export default TodoHeader;","map":{"version":3,"sources":["/Users/dhowell/personal-project/src/components/todo-components/TodoHeader.js"],"names":["TodoHeader","date","Date","day","getDate","weekDay","getDay","month","getMonth","enOrdinalRules","Intl","PluralRules","type","enOrdinalRulesMap","one","two","few","other","enOrdinalSuffix","select","getGreeting","hour","getHeaderImageClass","getHours","fontSize"],"mappings":"wFAAA,MAAO,IAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC/B;AACA,GAAMC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,EAAb,CACA,GAAMC,CAAAA,GAAG,CAAGF,IAAI,CAACG,OAAL,EAAZ,CACA,GAAMC,CAAAA,OAAO,CAAG,CACf,QADe,CAEf,QAFe,CAGf,SAHe,CAIf,WAJe,CAKf,UALe,CAMf,QANe,CAOf,UAPe,EAQdJ,IAAI,CAACK,MAAL,EARc,CAAhB,CASA,GAAMC,CAAAA,KAAK,CAAG,CACb,SADa,CAEb,UAFa,CAGb,OAHa,CAIb,OAJa,CAKb,KALa,CAMb,MANa,CAOb,MAPa,CAQb,QARa,CASb,WATa,CAUb,SAVa,CAWb,UAXa,CAYb,UAZa,EAaZN,IAAI,CAACO,QAAL,EAbY,CAAd,CAeA,GAAMC,CAAAA,cAAc,CAAG,GAAIC,CAAAA,IAAI,CAACC,WAAT,CAAqB,IAArB,CAA2B,CAAEC,IAAI,CAAE,SAAR,CAA3B,CAAvB,CACA,GAAMC,CAAAA,iBAAiB,CAAG,CACzBC,GAAG,CAAE,IADoB,CAEzBC,GAAG,CAAE,IAFoB,CAGzBC,GAAG,CAAE,IAHoB,CAIzBC,KAAK,CAAE,IAJkB,CAA1B,CAMA,GAAMC,CAAAA,eAAe,CAAGL,iBAAiB,CAACJ,cAAc,CAACU,MAAf,CAAsBhB,GAAtB,CAAD,CAAzC,CAEA,GAAMiB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAU,CAC7B,GAAIA,IAAI,EAAI,CAAR,EAAaA,IAAI,CAAG,EAAxB,CAA4B,CAC3B,MAAO,cAAP,CACA,CAFD,IAEO,IAAIA,IAAI,EAAI,EAAR,EAAcA,IAAI,CAAG,EAAzB,CAA6B,CACnC,MAAO,gBAAP,CACA,CAFM,IAEA,IAAIA,IAAI,EAAI,EAAR,EAAcA,IAAI,EAAI,CAA1B,CAA6B,CACnC,MAAO,cAAP,CACA,CACD,CARD,CAUA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACD,IAAD,CAAU,CACrC,GAAIA,IAAI,EAAI,CAAR,EAAaA,IAAI,CAAG,EAAxB,CAA4B,CAC3B,MAAO,oBAAP,CACA,CAFD,IAEO,IAAIA,IAAI,EAAI,EAAR,EAAcA,IAAI,CAAG,EAAzB,CAA6B,CACnC,MAAO,gBAAP,CACA,CAFM,IAEA,IAAIA,IAAI,EAAI,EAAR,EAAcA,IAAI,EAAI,CAA1B,CAA6B,CACnC,MAAO,kBAAP,CACA,CACD,CARD,CAUA,mBACC,gBAAQ,SAAS,WAAKC,mBAAmB,CAACrB,IAAI,CAACsB,QAAL,EAAD,CAAxB,eAAjB,wBACY,UAAG,SAAS,CAAC,WAAb,CAAyB,KAAK,CAAE,CAAEC,QAAQ,CAAE,MAAZ,CAAhC,UACTJ,WAAW,CAACnB,IAAI,CAACsB,QAAL,EAAD,CADF,EADZ,cAIC,WAAI,SAAS,CAAC,WAAd,oBAA8BlB,OAA9B,cAA0CF,GAA1C,SAAgDe,eAAhD,GAJD,cAKC,UAAG,SAAS,CAAC,WAAb,CAAyB,KAAK,CAAE,CAAEM,QAAQ,CAAE,MAAZ,CAAhC,UACEjB,KADF,EALD,GADD,CAWA,CApEM,CAsEP,cAAeP,CAAAA,UAAf","sourcesContent":["export const TodoHeader = () => {\n\t// TODO improve this, this is just to test the design\n\tconst date = new Date();\n\tconst day = date.getDate();\n\tconst weekDay = [\n\t\t'Sunday',\n\t\t'Monday',\n\t\t'Tuesday',\n\t\t'Wednesday',\n\t\t'Thursday',\n\t\t'Friday',\n\t\t'Saturday',\n\t][date.getDay()];\n\tconst month = [\n\t\t'January',\n\t\t'February',\n\t\t'March',\n\t\t'April',\n\t\t'May',\n\t\t'June',\n\t\t'July',\n\t\t'August',\n\t\t'September',\n\t\t'October',\n\t\t'November',\n\t\t'December',\n\t][date.getMonth()];\n\n\tconst enOrdinalRules = new Intl.PluralRules('en', { type: 'ordinal' });\n\tconst enOrdinalRulesMap = {\n\t\tone: 'st',\n\t\ttwo: 'nd',\n\t\tfew: 'rd',\n\t\tother: 'th',\n\t};\n\tconst enOrdinalSuffix = enOrdinalRulesMap[enOrdinalRules.select(day)];\n\n\tconst getGreeting = (hour) => {\n\t\tif (hour >= 6 && hour < 10) {\n\t\t\treturn 'Good Morning';\n\t\t} else if (hour >= 10 && hour < 19) {\n\t\t\treturn 'Good Afternoon';\n\t\t} else if (hour >= 19 || hour <= 6) {\n\t\t\treturn 'Good Evening';\n\t\t}\n\t};\n\n\tconst getHeaderImageClass = (hour) => {\n\t\tif (hour >= 6 && hour < 10) {\n\t\t\treturn 'evening-background';\n\t\t} else if (hour >= 10 && hour < 19) {\n\t\t\treturn 'day-background';\n\t\t} else if (hour >= 19 || hour <= 6) {\n\t\t\treturn 'night-background';\n\t\t}\n\t};\n\n\treturn (\n\t\t<header className={`${getHeaderImageClass(date.getHours())} all-center`}>\n            \t\t<p className='text-test' style={{ fontSize: '20px' }}>\n\t\t\t\t{getGreeting(date.getHours())}\n\t\t\t</p>\n\t\t\t<h1 className='text-test'>{`${weekDay}, ${day}${enOrdinalSuffix}`}</h1>\n\t\t\t<p className='text-test' style={{ fontSize: '30px' }}>\n\t\t\t\t{month}\n\t\t\t</p>\n\t\t</header>\n\t);\n};\n\nexport default TodoHeader;\n"]},"metadata":{},"sourceType":"module"}