{"ast":null,"code":"import DeleteIcon from'@material-ui/icons/Delete';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TodoItem(props){var textDecorationClass=props.todo.completed?\"line-through\":\"no-underline\";var textColorClass=props.todo.completed?\"text-pink-600\":\"text-gray-800\";return/*#__PURE__*/_jsxs(\"li\",{className:\"\".concat(textDecorationClass,\" \").concat(textColorClass),\"data-testid\":\"todo-item\",children:[/*#__PURE__*/_jsx(\"input\",{name:\"completed-checkbox\",type:\"checkbox\",checked:props.todo.completed,value:props.todo.completed,onChange:function onChange(){return props.markComplete(props.todo.id);}}),/*#__PURE__*/_jsx(\"span\",{children:props.todo.title}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return props.deleteTodo(props.todo.id);},children:/*#__PURE__*/_jsx(DeleteIcon,{})})]});}export default TodoItem;","map":{"version":3,"sources":["/Users/dhowell/personal-project/src/components/todo-components/TodoItem.js"],"names":["DeleteIcon","TodoItem","props","textDecorationClass","todo","completed","textColorClass","markComplete","id","title","deleteTodo"],"mappings":"AAEA,MAAOA,CAAAA,UAAP,KAAuB,2BAAvB,C,wFACA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACvB,GAAIC,CAAAA,mBAAmB,CAAGD,KAAK,CAACE,IAAN,CAAWC,SAAX,CACtB,cADsB,CAEtB,cAFJ,CAGA,GAAIC,CAAAA,cAAc,CAAGJ,KAAK,CAACE,IAAN,CAAWC,SAAX,CACjB,eADiB,CAEjB,eAFJ,CAIA,mBACE,YACE,SAAS,WAAKF,mBAAL,aAA4BG,cAA5B,CADX,CAEE,cAAY,WAFd,wBAIE,cACE,IAAI,CAAC,oBADP,CAEE,IAAI,CAAC,UAFP,CAGE,OAAO,CAAEJ,KAAK,CAACE,IAAN,CAAWC,SAHtB,CAIE,KAAK,CAAEH,KAAK,CAACE,IAAN,CAAWC,SAJpB,CAKE,QAAQ,CAAE,0BAAMH,CAAAA,KAAK,CAACK,YAAN,CAAmBL,KAAK,CAACE,IAAN,CAAWI,EAA9B,CAAN,EALZ,EAJF,cAWE,sBACGN,KAAK,CAACE,IAAN,CAAWK,KADd,EAXF,cAcE,eACE,OAAO,CAAE,yBAAMP,CAAAA,KAAK,CAACQ,UAAN,CAAiBR,KAAK,CAACE,IAAN,CAAWI,EAA5B,CAAN,EADX,uBAGI,KAAC,UAAD,IAHJ,EAdF,GADF,CAsBD,CAQD,cAAeP,CAAAA,QAAf","sourcesContent":["\nimport PropTypes from \"prop-types\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nfunction TodoItem(props) {\n  let textDecorationClass = props.todo.completed\n    ? \"line-through\"\n    : \"no-underline\";\n  let textColorClass = props.todo.completed\n    ? \"text-pink-600\"\n    : \"text-gray-800\";\n\n  return (\n    <li\n      className={`${textDecorationClass} ${textColorClass}`}\n      data-testid=\"todo-item\"\n    >\n      <input\n        name=\"completed-checkbox\"\n        type=\"checkbox\"\n        checked={props.todo.completed}\n        value={props.todo.completed}\n        onChange={() => props.markComplete(props.todo.id)}\n      />\n      <span>\n        {props.todo.title}\n      </span>\n      <button\n        onClick={() => props.deleteTodo(props.todo.id)}\n      >\n          <DeleteIcon />\n      </button>\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;"]},"metadata":{},"sourceType":"module"}