{"ast":null,"code":"var _jsxFileName = \"/Users/dhowell/personal-project/src/components/todo-components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { useState } from 'react';\nimport React from 'react';\nimport TodoHeader from './TodoHeader';\nimport AddTodo from './AddTodo';\nimport TodoItem from './TodoItem';\nimport Confetti from 'react-confetti';\nimport { useWindowSize } from '@react-hook/window-size';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Fragment } from 'react';\nimport { Checkbox, IconButton } from '@material-ui/core';\nimport { Label } from '@material-ui/icons';\nimport DeleteIcon from '@material-ui/icons/Delete'; // export const TodoList = () => {\n// \tconst [todos, setTodos] = useState([]);\n// \tconst addTodo = (title) => {\n// \t\tlet newTodo = {\n// \t\t\tid: uuidv4(),\n// \t\t\ttitle,\n// \t\t\tcompleted: false,\n// \t\t};\n// \t\tsetTodos([...todos, newTodo]);\n// \t};\n// \tconst deleteTodo = (id) => {\n// \t\tsetTodos(todos.filter((todo) => todo.id !== id));\n// \t};\n// \tconst markComplete = (id) => {\n// \t\tsetTodos(\n// \t\t\ttodos.map((todo) =>\n// \t\t\t\ttodo.id === id ? { ...todo, completed: !todo.completed } : todo\n// \t\t\t)\n// \t\t);\n// \t};\n// \tconst { width, height } = useWindowSize();\n// \treturn (\n// \t\t<div>\n// \t\t\t<TodoHeader />\n// \t\t\t<AddTodo addTodo={addTodo} />\n// \t\t\t<div>\n// \t\t\t\t{todos.length > 0 ? (\n// \t\t\t\t\t<ul>\n// \t\t\t\t\t\t{todos.map((todo) => (\n// \t\t\t\t\t\t\t<TodoItem\n// \t\t\t\t\t\t\t\tkey={todo.id}\n// \t\t\t\t\t\t\t\ttodo={todo}\n// \t\t\t\t\t\t\t\tmarkComplete={markComplete}\n// \t\t\t\t\t\t\t\tdeleteTodo={deleteTodo}\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t))}\n// \t\t\t\t\t</ul>\n// \t\t\t\t) : (\n// \t\t\t\t\t<div>\n// \t\t\t\t\t\t<p>You're all caught up!</p>\n// \t\t\t\t\t\t<Confetti width={width} height={height} />\n// \t\t\t\t\t</div>\n// \t\t\t\t)}\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  }\n});\nexport const TodoList = () => {\n  _s();\n\n  const [todos, setTodos] = useState(() => [{\n    title: 'Test',\n    priority: 2,\n    id: uuidv4()\n  }]);\n\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const markComplete = id => {\n    setTodos(todos.map(todo => todo.id === id ? { ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n\n  const classes = useStyles();\n\n  const addTodo = (title, priority) => {\n    let newTodo = {\n      title,\n      priority,\n      id: uuidv4(),\n      completed: false\n    };\n    setTodos([...todos, newTodo]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [todos.filter(todo => todo.completed == false).length, \" todo items left!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"customized table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"Todo Item(s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: todos.map(row => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                onChange: () => markComplete(row.id),\n                checked: row.completed\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 10\n              }, this), row.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: [row.priority, ' ', /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => deleteTodo(row.id),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 9\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todos.filter(todo => todo.completed == false).length === 0 ? /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 6\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TodoList, \"Za/C/+8jMH0YtboIoiuQGZX4K3M=\", false, function () {\n  return [useStyles];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/dhowell/personal-project/src/components/todo-components/TodoList.js"],"names":["v4","uuidv4","useState","React","TodoHeader","AddTodo","TodoItem","Confetti","useWindowSize","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Fragment","Checkbox","IconButton","Label","DeleteIcon","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","useStyles","table","minWidth","TodoList","todos","setTodos","title","priority","id","deleteTodo","filter","todo","markComplete","map","completed","classes","addTodo","newTodo","length","row"],"mappings":"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","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { useState } from 'react';\nimport React from 'react';\nimport TodoHeader from './TodoHeader';\nimport AddTodo from './AddTodo';\nimport TodoItem from './TodoItem';\nimport Confetti from 'react-confetti';\nimport { useWindowSize } from '@react-hook/window-size';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Fragment } from 'react';\nimport { Checkbox, IconButton } from '@material-ui/core';\nimport { Label } from '@material-ui/icons';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n// export const TodoList = () => {\n// \tconst [todos, setTodos] = useState([]);\n\n// \tconst addTodo = (title) => {\n// \t\tlet newTodo = {\n// \t\t\tid: uuidv4(),\n// \t\t\ttitle,\n// \t\t\tcompleted: false,\n// \t\t};\n\n// \t\tsetTodos([...todos, newTodo]);\n// \t};\n\n// \tconst deleteTodo = (id) => {\n// \t\tsetTodos(todos.filter((todo) => todo.id !== id));\n// \t};\n\n// \tconst markComplete = (id) => {\n// \t\tsetTodos(\n// \t\t\ttodos.map((todo) =>\n// \t\t\t\ttodo.id === id ? { ...todo, completed: !todo.completed } : todo\n// \t\t\t)\n// \t\t);\n// \t};\n\n// \tconst { width, height } = useWindowSize();\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<TodoHeader />\n\n// \t\t\t<AddTodo addTodo={addTodo} />\n\n// \t\t\t<div>\n// \t\t\t\t{todos.length > 0 ? (\n// \t\t\t\t\t<ul>\n// \t\t\t\t\t\t{todos.map((todo) => (\n// \t\t\t\t\t\t\t<TodoItem\n// \t\t\t\t\t\t\t\tkey={todo.id}\n// \t\t\t\t\t\t\t\ttodo={todo}\n// \t\t\t\t\t\t\t\tmarkComplete={markComplete}\n// \t\t\t\t\t\t\t\tdeleteTodo={deleteTodo}\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t))}\n// \t\t\t\t\t</ul>\n// \t\t\t\t) : (\n// \t\t\t\t\t<div>\n// \t\t\t\t\t\t<p>You're all caught up!</p>\n// \t\t\t\t\t\t<Confetti width={width} height={height} />\n// \t\t\t\t\t</div>\n// \t\t\t\t)}\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// };\n\nconst StyledTableCell = withStyles((theme) => ({\n\thead: {\n\t\tbackgroundColor: theme.palette.common.black,\n\t\tcolor: theme.palette.common.white,\n\t},\n\tbody: {\n\t\tfontSize: 14,\n\t},\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n\troot: {\n\t\t'&:nth-of-type(odd)': {\n\t\t\tbackgroundColor: theme.palette.action.hover,\n\t\t},\n\t},\n}))(TableRow);\n\nconst useStyles = makeStyles({\n\ttable: {\n\t\tminWidth: 700,\n\t},\n});\n\nexport const TodoList = () => {\n\tconst [todos, setTodos] = useState(() => [\n\t\t{ title: 'Test', priority: 2, id: uuidv4() },\n\t]);\n\n\tconst deleteTodo = (id) => {\n\t\tsetTodos(todos.filter((todo) => todo.id !== id));\n\t};\n\n\tconst markComplete = (id) => {\n\t\tsetTodos(\n\t\t\ttodos.map((todo) =>\n\t\t\t\ttodo.id === id ? { ...todo, completed: !todo.completed } : todo\n\t\t\t)\n\t\t);\n\t};\n\n\tconst classes = useStyles();\n\n\tconst addTodo = (title, priority) => {\n\t\tlet newTodo = { title, priority, id: uuidv4(), completed: false };\n\n\t\tsetTodos([...todos, newTodo]);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<TodoHeader />\n\t\t\t<AddTodo addTodo={addTodo} />\n\t\t\t<label>\n\t\t\t\t{todos.filter((todo) => todo.completed == false).length} todo items\n\t\t\t\tleft!\n\t\t\t</label>\n\t\t\t<TableContainer component={Paper}>\n\t\t\t\t<Table className={classes.table} aria-label='customized table'>\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<StyledTableCell>Todo Item(s)</StyledTableCell>\n\t\t\t\t\t\t\t<StyledTableCell align='center'>Priority</StyledTableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{todos.map((row) => (\n\t\t\t\t\t\t\t<StyledTableRow key={row.id}>\n\t\t\t\t\t\t\t\t<StyledTableCell component='th' scope='row'>\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tonChange={() => markComplete(row.id)}\n\t\t\t\t\t\t\t\t\t\tchecked={row.completed}\n\t\t\t\t\t\t\t\t\t></Checkbox>\n\t\t\t\t\t\t\t\t\t{row.title}\n\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t\t<StyledTableCell align='center'>\n\t\t\t\t\t\t\t\t\t{row.priority}{' '}\n\t\t\t\t\t\t\t\t\t<IconButton onClick={() => deleteTodo(row.id)}>\n\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t</StyledTableRow>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t<div>\n\t\t\t\t{todos.filter((todo) => todo.completed == false).length === 0 ? (\n\t\t\t\t\t<Confetti />\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}