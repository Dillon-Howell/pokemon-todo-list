{"ast":null,"code":"var _jsxFileName = \"/Users/dhowell/personal-project/src/components/todo-components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { useState } from 'react';\nimport React from 'react';\nimport TodoHeader from './TodoHeader';\nimport AddTodo from './AddTodo';\nimport TodoItem from './TodoItem';\nimport Confetti from 'react-confetti';\nimport { useWindowSize } from '@react-hook/window-size';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Fragment } from 'react'; // export const TodoList = () => {\n// \tconst [todos, setTodos] = useState([]);\n// \tconst addTodo = (title) => {\n// \t\tlet newTodo = {\n// \t\t\tid: uuidv4(),\n// \t\t\ttitle,\n// \t\t\tcompleted: false,\n// \t\t};\n// \t\tsetTodos([...todos, newTodo]);\n// \t};\n// \tconst deleteTodo = (id) => {\n// \t\tsetTodos(todos.filter((todo) => todo.id !== id));\n// \t};\n// \tconst markComplete = (id) => {\n// \t\tsetTodos(\n// \t\t\ttodos.map((todo) =>\n// \t\t\t\ttodo.id === id ? { ...todo, completed: !todo.completed } : todo\n// \t\t\t)\n// \t\t);\n// \t};\n// \tconst { width, height } = useWindowSize();\n// \treturn (\n// \t\t<div>\n// \t\t\t<TodoHeader />\n// \t\t\t<AddTodo addTodo={addTodo} />\n// \t\t\t<div>\n// \t\t\t\t{todos.length > 0 ? (\n// \t\t\t\t\t<ul>\n// \t\t\t\t\t\t{todos.map((todo) => (\n// \t\t\t\t\t\t\t<TodoItem\n// \t\t\t\t\t\t\t\tkey={todo.id}\n// \t\t\t\t\t\t\t\ttodo={todo}\n// \t\t\t\t\t\t\t\tmarkComplete={markComplete}\n// \t\t\t\t\t\t\t\tdeleteTodo={deleteTodo}\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t))}\n// \t\t\t\t\t</ul>\n// \t\t\t\t) : (\n// \t\t\t\t\t<div>\n// \t\t\t\t\t\t<p>You're all caught up!</p>\n// \t\t\t\t\t\t<Confetti width={width} height={height} />\n// \t\t\t\t\t</div>\n// \t\t\t\t)}\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  }\n});\nexport const TodoList = () => {\n  _s();\n\n  const classes = useStyles();\n  const [todos, setTodos] = useState(['Test']); //   function createData(todo) {\n  //     return { todo };\n  //   }\n\n  const addTodo = title => {\n    let newTodo = {\n      id: uuidv4(),\n      title,\n      completed: false\n    };\n    setTodos([...todos, newTodo]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"customized table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"Todo Item(s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: todos.map(row => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.todo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, row.todo, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TodoList, \"EfONon/YtfvZuWmiV3JTtN1mbd8=\", false, function () {\n  return [useStyles];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/dhowell/personal-project/src/components/todo-components/TodoList.js"],"names":["v4","uuidv4","useState","React","TodoHeader","AddTodo","TodoItem","Confetti","useWindowSize","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Fragment","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","useStyles","table","minWidth","TodoList","classes","todos","setTodos","addTodo","title","newTodo","id","completed","map","row","todo"],"mappings":"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","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { useState } from 'react';\nimport React from 'react';\nimport TodoHeader from './TodoHeader';\nimport AddTodo from './AddTodo';\nimport TodoItem from './TodoItem';\nimport Confetti from 'react-confetti';\nimport { useWindowSize } from '@react-hook/window-size';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Fragment } from 'react';\n\n// export const TodoList = () => {\n// \tconst [todos, setTodos] = useState([]);\n\n// \tconst addTodo = (title) => {\n// \t\tlet newTodo = {\n// \t\t\tid: uuidv4(),\n// \t\t\ttitle,\n// \t\t\tcompleted: false,\n// \t\t};\n\n// \t\tsetTodos([...todos, newTodo]);\n// \t};\n\n// \tconst deleteTodo = (id) => {\n// \t\tsetTodos(todos.filter((todo) => todo.id !== id));\n// \t};\n\n// \tconst markComplete = (id) => {\n// \t\tsetTodos(\n// \t\t\ttodos.map((todo) =>\n// \t\t\t\ttodo.id === id ? { ...todo, completed: !todo.completed } : todo\n// \t\t\t)\n// \t\t);\n// \t};\n\n// \tconst { width, height } = useWindowSize();\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<TodoHeader />\n\n// \t\t\t<AddTodo addTodo={addTodo} />\n\n// \t\t\t<div>\n// \t\t\t\t{todos.length > 0 ? (\n// \t\t\t\t\t<ul>\n// \t\t\t\t\t\t{todos.map((todo) => (\n// \t\t\t\t\t\t\t<TodoItem\n// \t\t\t\t\t\t\t\tkey={todo.id}\n// \t\t\t\t\t\t\t\ttodo={todo}\n// \t\t\t\t\t\t\t\tmarkComplete={markComplete}\n// \t\t\t\t\t\t\t\tdeleteTodo={deleteTodo}\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t))}\n// \t\t\t\t\t</ul>\n// \t\t\t\t) : (\n// \t\t\t\t\t<div>\n// \t\t\t\t\t\t<p>You're all caught up!</p>\n// \t\t\t\t\t\t<Confetti width={width} height={height} />\n// \t\t\t\t\t</div>\n// \t\t\t\t)}\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// };\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport const TodoList = () => {\n  const classes = useStyles();\n\n\n  const [todos, setTodos] = useState(['Test']);\n  \n\n//   function createData(todo) {\n//     return { todo };\n//   }\n  \n\n\n\n\n\n  const addTodo = (title) => {\n      let newTodo = {\n          id: uuidv4(),\n          title,\n          completed: false,\n     };\n\n     setTodos([...todos, newTodo]);\n  };\n\n\n  return (\n      <Fragment> \n          <TodoHeader/>\n          <AddTodo />\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Todo Item(s)</StyledTableCell>\n            {/* <StyledTableCell align=\"right\">Calories</StyledTableCell> */}\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {todos.map((row) => (\n            <StyledTableRow key={row.todo}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {row.todo}\n              </StyledTableCell>\n              {/* <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>  */}\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}