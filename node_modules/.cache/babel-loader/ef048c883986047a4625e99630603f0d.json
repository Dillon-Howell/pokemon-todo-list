{"ast":null,"code":"var _jsxFileName = \"/Users/dhowell/personal-project/src/components/TodoHeader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoHeader = () => {\n  // TODO improve this, this is just to test the design\n  const date = new Date();\n  const day = date.getDate();\n  const weekDay = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][date.getDay()];\n  const month = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'][date.getMonth()];\n  const enOrdinalRules = new Intl.PluralRules('en', {\n    type: 'ordinal'\n  });\n  const enOrdinalRulesMap = {\n    one: 'st',\n    two: 'nd',\n    few: 'rd',\n    other: 'th'\n  };\n  const enOrdinalSuffix = enOrdinalRulesMap[enOrdinalRules.select(day)];\n\n  const getGreeting = hour => {\n    if (hour >= 6 && hour < 10) {\n      return 'Good Morning';\n    } else if (hour >= 10 && hour < 19) {\n      return 'Good Afternoon';\n    } else if (hour >= 19 || hour <= 6) {\n      return 'Good Evening';\n    }\n  };\n\n  const getHeaderImageClass = hour => {\n    if (hour >= 6 && hour < 10) {\n      return 'day-background';\n    } else if (hour >= 10 && hour < 19) {\n      return '';\n    } else if (hour >= 19 || hour <= 6) {\n      return '';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: `${getHeaderImageClass(date.getHours())} all-center`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-test\",\n      children: `${weekDay}, ${day}${enOrdinalSuffix}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-test\",\n      style: {\n        fontSize: '30px'\n      },\n      children: month\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n_c = TodoHeader;\nexport default TodoHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoHeader\");","map":{"version":3,"sources":["/Users/dhowell/personal-project/src/components/TodoHeader.js"],"names":["TodoHeader","date","Date","day","getDate","weekDay","getDay","month","getMonth","enOrdinalRules","Intl","PluralRules","type","enOrdinalRulesMap","one","two","few","other","enOrdinalSuffix","select","getGreeting","hour","getHeaderImageClass","getHours","fontSize"],"mappings":";;AAAA,OAAO,MAAMA,UAAU,GAAG,MAAM;AAC/B;AACA,QAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,QAAMC,GAAG,GAAGF,IAAI,CAACG,OAAL,EAAZ;AACA,QAAMC,OAAO,GAAG,CACf,QADe,EAEf,QAFe,EAGf,SAHe,EAIf,WAJe,EAKf,UALe,EAMf,QANe,EAOf,UAPe,EAQdJ,IAAI,CAACK,MAAL,EARc,CAAhB;AASA,QAAMC,KAAK,GAAG,CACb,SADa,EAEb,UAFa,EAGb,OAHa,EAIb,OAJa,EAKb,KALa,EAMb,MANa,EAOb,MAPa,EAQb,QARa,EASb,WATa,EAUb,SAVa,EAWb,UAXa,EAYb,UAZa,EAaZN,IAAI,CAACO,QAAL,EAbY,CAAd;AAeA,QAAMC,cAAc,GAAG,IAAIC,IAAI,CAACC,WAAT,CAAqB,IAArB,EAA2B;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAA3B,CAAvB;AACA,QAAMC,iBAAiB,GAAG;AACzBC,IAAAA,GAAG,EAAE,IADoB;AAEzBC,IAAAA,GAAG,EAAE,IAFoB;AAGzBC,IAAAA,GAAG,EAAE,IAHoB;AAIzBC,IAAAA,KAAK,EAAE;AAJkB,GAA1B;AAMA,QAAMC,eAAe,GAAGL,iBAAiB,CAACJ,cAAc,CAACU,MAAf,CAAsBhB,GAAtB,CAAD,CAAzC;;AAEA,QAAMiB,WAAW,GAAIC,IAAD,IAAU;AAC7B,QAAIA,IAAI,IAAI,CAAR,IAAaA,IAAI,GAAG,EAAxB,EAA4B;AAC3B,aAAO,cAAP;AACA,KAFD,MAEO,IAAIA,IAAI,IAAI,EAAR,IAAcA,IAAI,GAAG,EAAzB,EAA6B;AACnC,aAAO,gBAAP;AACA,KAFM,MAEA,IAAIA,IAAI,IAAI,EAAR,IAAcA,IAAI,IAAI,CAA1B,EAA6B;AACnC,aAAO,cAAP;AACA;AACD,GARD;;AAUA,QAAMC,mBAAmB,GAAID,IAAD,IAAU;AACrC,QAAIA,IAAI,IAAI,CAAR,IAAaA,IAAI,GAAG,EAAxB,EAA4B;AAC3B,aAAO,gBAAP;AACA,KAFD,MAEO,IAAIA,IAAI,IAAI,EAAR,IAAcA,IAAI,GAAG,EAAzB,EAA6B;AACnC,aAAO,EAAP;AACA,KAFM,MAEA,IAAIA,IAAI,IAAI,EAAR,IAAcA,IAAI,IAAI,CAA1B,EAA6B;AACnC,aAAO,EAAP;AACA;AACD,GARD;;AAUA,sBACC;AAAQ,IAAA,SAAS,EAAG,GAAEC,mBAAmB,CAACrB,IAAI,CAACsB,QAAL,EAAD,CAAkB,aAA3D;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBAA4B,GAAElB,OAAQ,KAAIF,GAAI,GAAEe,eAAgB;AAAhE;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAG,MAAA,SAAS,EAAC,WAAb;AAAyB,MAAA,KAAK,EAAE;AAAEM,QAAAA,QAAQ,EAAE;AAAZ,OAAhC;AAAA,gBACEjB;AADF;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAQA,CAjEM;KAAMP,U;AAmEb,eAAeA,UAAf","sourcesContent":["export const TodoHeader = () => {\n\t// TODO improve this, this is just to test the design\n\tconst date = new Date();\n\tconst day = date.getDate();\n\tconst weekDay = [\n\t\t'Sunday',\n\t\t'Monday',\n\t\t'Tuesday',\n\t\t'Wednesday',\n\t\t'Thursday',\n\t\t'Friday',\n\t\t'Saturday',\n\t][date.getDay()];\n\tconst month = [\n\t\t'January',\n\t\t'February',\n\t\t'March',\n\t\t'April',\n\t\t'May',\n\t\t'June',\n\t\t'July',\n\t\t'August',\n\t\t'September',\n\t\t'October',\n\t\t'November',\n\t\t'December',\n\t][date.getMonth()];\n\n\tconst enOrdinalRules = new Intl.PluralRules('en', { type: 'ordinal' });\n\tconst enOrdinalRulesMap = {\n\t\tone: 'st',\n\t\ttwo: 'nd',\n\t\tfew: 'rd',\n\t\tother: 'th',\n\t};\n\tconst enOrdinalSuffix = enOrdinalRulesMap[enOrdinalRules.select(day)];\n\n\tconst getGreeting = (hour) => {\n\t\tif (hour >= 6 && hour < 10) {\n\t\t\treturn 'Good Morning';\n\t\t} else if (hour >= 10 && hour < 19) {\n\t\t\treturn 'Good Afternoon';\n\t\t} else if (hour >= 19 || hour <= 6) {\n\t\t\treturn 'Good Evening';\n\t\t}\n\t};\n\n\tconst getHeaderImageClass = (hour) => {\n\t\tif (hour >= 6 && hour < 10) {\n\t\t\treturn 'day-background';\n\t\t} else if (hour >= 10 && hour < 19) {\n\t\t\treturn '';\n\t\t} else if (hour >= 19 || hour <= 6) {\n\t\t\treturn '';\n\t\t}\n\t};\n\n\treturn (\n\t\t<header className={`${getHeaderImageClass(date.getHours())} all-center`}>\n\t\t\t<h1 className='text-test'>{`${weekDay}, ${day}${enOrdinalSuffix}`}</h1>\n\t\t\t<p className='text-test' style={{ fontSize: '30px' }}>\n\t\t\t\t{month}\n\t\t\t</p>\n\t\t</header>\n\t);\n};\n\nexport default TodoHeader;\n"]},"metadata":{},"sourceType":"module"}